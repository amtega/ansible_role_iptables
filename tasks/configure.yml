---
# Role configure tasks

- block:
    - name: setup fact with zones loaded from host variables
      set_fact:
        iptables_hostvars_zones: >-
          {{ lookup('template', 'hostvars_zones.yml.j2') | from_yaml }}

    - name: setup fact with zones that will be managed
      set_fact:
        iptables_zones_managed: >-
          {{ (iptables_load_zones_from_hostvars
              and not iptables_hostvars_zones is string)
              | ternary([ iptables_hostvars_zones ] | flatten
                        + iptables_zones,
                        iptables_zones) }}

    - name: setup fact with services loaded from host variables
      set_fact:
        iptables_hostvars_services: >-
          {{ lookup('template', 'hostvars_services.yml.j2') | from_yaml }}

    - name: setup fact with services that will be managed
      set_fact:
        iptables_services_managed: >-
          {{ (iptables_load_services_from_hostvars
              and not iptables_hostvars_services is string)
              | ternary([ iptables_hostvars_services ] | flatten
                        + iptables_services,
                        iptables_services) }}

    - name: create iptables configuration file
      template:
        src: config.j2
        dest: "{{ iptables_config_path }}"
      notify:
        - reload iptables service

    - name: create iptables rules file
      template:
        src: rules.j2
        dest: "{{ iptables_rules_path }}"
      notify:
        - restore iptables rules
        - save iptables rules
        - reload iptables service

    - name: create rsyslog configuration file
      template:
        src: rsyslog.j2
        dest: "{{ iptables_rsyslog_config_path }}"
      notify:
        - reload rsyslog service

    - name: create logrotate configuration file
      template:
        src: logrotate.j2
        dest: "{{ iptables_logrotate_config_path }}"
  tags:
    - role::iptables
    - role::iptables::configure
