*filter

#
# Default policies: Drop all incoming traffic
#
-P INPUT DROP

# See net.ipv4.ip_forward in /etc/sysctl.conf
-P FORWARD DROP

-P OUTPUT ACCEPT

#
# Create custom chains
#

#INPUT

{% for zone in iptables_zones %}
-N INPUT-{{ zone.name }}
{% endfor %}
-N INPUT-DENY
-N INPUT-LOG

#OUTPUT

{% for zone in iptables_zones %}
-N OUTPUT-{{ zone.name }}
{% endfor %}
-N OUTPUT-DENY
-N OUPUT-LOG

#
# Rules for default INPUT chain
#

# Custom rules for default input
{{ custom_INPUT_rules }}

# Allow all traffic of already established sessions
-A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

# All all ICMP input traffic
-A INPUT -p icmp -m state --state RELATED -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 4 -j ACCEPT
-A INPUT -p icmp -m icmp --icmp-type 8 -j ACCEPT
-A INPUT -p icmp -j DROP

# Define jumps for every interface
-A INPUT -i lo -j ACCEPT
{% for zone in iptables_zones %}
{% for interface in zone.interfaces %}
-A INPUT -i {{ interface }} -j INPUT-{{ zone.name }}
{% endfor %}
{% endfor %}
-A INPUT -j INPUT-DENY

#
# Rules for default OUTPUT chain
#

{% for zone in iptables_zones %}
{% for interface in zone.interfaces %}
-A OUTPUT -o {{ interface }} -j OUTPUT-{{ zone.name }}
{% endfor %}
{% endfor %}

# =======================================================================================
{% for zone in iptables_zones %}
#
# Rules for the {{ zone.name }} interface
#

# Custom rules for {{ zone.name }} input
{% set custom_rules = "custom_INPUT_" + zone.name  + "_rules" %}
{{ hostvars[inventory_hostname][custom_rules] | default(vars[custom_rules]) }}

{% for rule in zone.open_services %}
# Allow {{ rule.service_name }}
{% if rule.src_net | default('') %}
{% if rule.multiple %}
-A INPUT-{{ zone.name }} -s {{ rule.src_net }} -p tcp -m state --state NEW -m tcp -m multiport --dports {{ rule.ports }} -j ACCEPT
{% else %}
-A INPUT-{{ zone.name }} -s {{ rule.src_net }} -p tcp -m state --state NEW -m tcp --dport {{ rule.ports }} -j ACCEPT
{% endif %}
{% else %}
{% if rule.multiple %}
-A INPUT-{{ zone.name }} -p tcp -m state --state NEW -m tcp -m multiport --dports {{ rule.ports }} -j ACCEPT
{% else %}
-A INPUT-{{ zone.name }} -p tcp -m state --state NEW -m tcp --dport {{ rule.ports }} -j ACCEPT
{% endif %}
{% endif %}
{% endfor %}

# Log input traffic not allowed
{% if zone.name == "SERVICE" %}
-A INPUT-{{ zone.name }} -j INPUT-LOG
{% else %}
#-A INPUT-{{ zone.name }} -j INPUT-LOG
{% endif %}

# Deny other input traffic
-A INPUT-{{ zone.name }} -j INPUT-DENY

# OUTPUT

# Accept all output traffic
-A OUTPUT-{{ zone.name }} -j ACCEPT

{% endfor %}
# =======================================================================================

#
# Common rules
#

# Custom rules for LOG input
{{ custom_INPUT_LOG_rules }}

# Traffic log chains
-A INPUT-LOG  -m limit --limit 3/min -m pkttype ! --pkt-type multicast  -m tcp -p tcp --tcp-flags FIN,SYN,RST,ACK SYN -j LOG --log-level 7 --log-prefix "FW denied: " --log-tcp-options --log-ip-options
-A INPUT-LOG -m limit --limit 3/min -m pkttype ! --pkt-type multicast  -m udp -p udp -j LOG --log-level 7 --log-prefix "FW denied: " --log-tcp-options --log-ip-options
-A INPUT-LOG -j RETURN

# Deny chains
-A INPUT-DENY -j REJECT --reject-with icmp-host-prohibited
-A OUTPUT-DENY -j REJECT --reject-with icmp-host-prohibited

COMMIT
